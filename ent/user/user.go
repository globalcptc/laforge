// Code generated by ent, DO NOT EDIT.

package user

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldHclID holds the string denoting the hcl_id field in the database.
	FieldHclID = "hcl_id"
	// EdgeTag holds the string denoting the tag edge name in mutations.
	EdgeTag = "Tag"
	// EdgeEnvironments holds the string denoting the environments edge name in mutations.
	EdgeEnvironments = "Environments"
	// Table holds the table name of the user in the database.
	Table = "users"
	// TagTable is the table that holds the Tag relation/edge.
	TagTable = "tags"
	// TagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagInverseTable = "tags"
	// TagColumn is the table column denoting the Tag relation/edge.
	TagColumn = "user_tag"
	// EnvironmentsTable is the table that holds the Environments relation/edge. The primary key declared below.
	EnvironmentsTable = "environment_Users"
	// EnvironmentsInverseTable is the table name for the Environment entity.
	// It exists in this package in order to avoid circular dependency with the "environment" package.
	EnvironmentsInverseTable = "environments"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldUUID,
	FieldEmail,
	FieldHclID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"ansible_users",
	"command_users",
	"finding_users",
	"host_users",
	"script_users",
}

var (
	// EnvironmentsPrimaryKey and EnvironmentsColumn2 are the table columns denoting the
	// primary key for the Environments relation (M2M).
	EnvironmentsPrimaryKey = []string{"environment_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
